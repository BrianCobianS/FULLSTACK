- name: Create Directory UINSTALL/
  file:
    path: "{{c_adx_imnt}}UINSTALL/"
    state: directory

- name: Download Toshiba Nexus Package ACE EPS From Nexus
  get_url:
    url: "{{nexus_url2}}/repository/tgcs-maven-snapshot/com/toshibacommerce/ace/ACE4D001/{{level_name}}-SNAPSHOT/ACE4D001-{{level_complementEPS}}.zip"
    dest: "{{landing_zone}}"
    timeout: 300
    
- name: Create Directory ACE4D If Does Not Exist
  file:
    path: "{{c_drive}}ACE4D/"
    state: directory

- name: Copy ACE4D
  shell: "cp {{landing_zone}}ACE4D001-{{level_complementEPS}}.zip {{c_drive}}ACE4D/ACE4D001.zip;"


- name: cp unZIp.py and Unziping the packages of installation
  shell: "cp {{landing_zone}}unZIP.PY {{c_adx_imnt}}UINSTALL/;python3 {{c_adx_imnt}}UINSTALL/unZIP.PY 4"
  
- name: cp updFile.py Updating the installation files to automate the installaiton
  shell: "cp {{landing_zone}}updFile.py {{c_adx_imnt}}UINSTALL/; python3 {{c_adx_imnt}}UINSTALL/updFile.py 4"

- name: Copy Files In UINSTALL
  shell: "cp {{landing_zone}}asm.py {{c_adx_imnt}}/;cp {{landing_zone}}AUTO4D.BAT {{c_adx_imnt}};cp {{landing_zone}}START4D.BAT {{c_adx_imnt}}UINSTALL/;"

- name: Cheks if there is an ACE4D old Version dat
  stat:
    path: "{{c_adx_ipgm}}ADXCATID.DAT"
  register: ACE4DPCF

- name: Deleting the ACE4D old Version dat and Installation
  shell: "rm {{c_adx_ipgm}}ADXCATID.DAT; echo 1 >> {{c_adx_imnt}}AUTO4D.BAT"
  when: 
      - ACE4DPCF.stat.exists
      - opc == "1"

- name: Firs time installaiton for EPS
  shell: "echo 1 >> {{c_adx_imnt}}AUTO4D.BAT"
  when: 
      - not ACE4DPCF.stat.exists
      - opc == "1"

- name: Not previous information of EPS for migration, changing to installation
  shell: "echo 1 >> {{c_adx_imnt}}AUTO4D.BAT"
  when:
      - not ACE4DPCF.stat.exists
      - opc == "2"
  
- name: Migration ACE EPS
  shell: "echo 2 >> {{c_adx_imnt}}AUTO4D.BAT"
  when:
    - ACE4DPCF.stat.exists
    - opc == "2"

- name: Starting the installation EPS(ACE4D)
  shell: "{{c_adx_imnt}}UINSTALL/START4D.BAT"

- name: Starting asm and reboot controller...
  shell: "python2 {{c_adx_imnt}}asm.py {{ASM}} AI"
  ignore_errors: true

- name: Wait For Reboot If There Was A Change
  wait_for_connection:
    sleep: 5
    delay: 10
    timeout: 300

- name: Check de log file of ASM
  command: cat adxcshsf.dat
  args:
      chdir: "{{c_adx_sdt1}}"
